{"version":3,"sources":["components/firebase.js","contexts/AuthContext.js","components/Chats.js","components/Login.js","components/App.js","index.js"],"names":["auth","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","AuthContext","React","createContext","AuthProvider","children","useState","loading","setLoading","user","setUser","history","useHistory","useEffect","onAuthStateChanged","push","value","Provider","Chats","useContext","handleLogout","a","signOut","getFile","url","fetch","response","blob","data","File","type","axios","get","headers","process","email","uid","then","catch","formdata","FormData","append","photoURL","avatar","name","post","error","console","log","className","onClick","height","projectID","userName","userSecret","Login","id","signInWithRedirect","GoogleAuthProvider","GoogleOutlined","FacebookAuthProvider","FacebookOutlined","App","style","fontFamily","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f6e641f.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\n export const auth =  firebase.initializeApp ({\r\n    apiKey: \"AIzaSyAfnjvhJ6xvQpPmgqe1kLaBitgKHo_Jkv4\",\r\n    authDomain: \"talk-93619.firebaseapp.com\",\r\n    projectId: \"talk-93619\",\r\n    storageBucket: \"talk-93619.appspot.com\",\r\n    messagingSenderId: \"897602640984\",\r\n    appId: \"1:897602640984:web:3418a87b816649053d7e2d\"\r\n  }).auth();","//auth context is used to see the data which is coming back from google and fb\r\n\r\nimport React, { useState, useEffect, useContext} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {auth} from '../components/firebase';\r\n\r\nconst AuthContext = React.createContext();  //create context\r\n\r\nexport const useAuth = () => useContext(AuthContext);  //to expoet/return it completely - in usecontext react hook\r\n\r\nexport const AuthProvider = ({children}) => { //react children is simply goin to render all jsx into authprovider  --> to manage users data.\r\n    const [loading, setLoading] = useState(true);\r\n    const [user, setUser] = useState(null);\r\n    const history = useHistory();  //to renavigate somewher\r\n\r\n    useEffect(() => { //grabing user from firebase auth and setting it to state.\r\n        auth.onAuthStateChanged((user) => {\r\n            setUser(user);\r\n            setLoading(false);\r\n            if (user) history.push('/chats'); // only if have the user then push to chats.\r\n        })\r\n    }, [user,history]);//dependency array - when things inside these arrays changes the abc callback fnc recalls\r\n\r\n    const value = {user}; //whenever working wioth auth context we need to have one value obj.\r\n\r\n    return(\r\n        <AuthContext.Provider value={value}>  \r\n            {!loading && children}  \r\n        </AuthContext.Provider> //fnc that accepts value - if not loading - then show children.\r\n    );\r\n}","import React, {useRef, useState, useEffect} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {Avatar, ChatEngine } from 'react-chat-engine';\r\nimport {auth} from '../components/firebase';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport axios from 'axios';\r\n\r\n// moreover we need to call caht engine api's to create users from the loged in users.\r\n\r\n\r\nconst Chats = () => {\r\n    const history = useHistory(); // created a hook to use down below.\r\n    const {user} = useAuth();\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const handleLogout = async () => {\r\n        await auth.signOut();\r\n        history.push('/');              //rediects to login form\r\n    }\r\n\r\n    const getFile = async(url) => {\r\n        const response = await fetch(url);\r\n        const data = await response.blob();  // .blob transfer a file in binary format\r\n\r\n        return new File([data], \"userphoto.jpg\", {type: 'image/jpeg'})\r\n    }\r\n    useEffect(() => {                   //if there is no user redirect it login\r\n        if(!user){\r\n            history.push('/');\r\n            return;\r\n        }\r\n\r\n        axios.get(\"https://api.chatengine.io/users/me/\", { //axios is used to send async HTTP reqs\r\n            headers:{\r\n                \"project-id\": process.env.REACT_APP_CHAT_ENGINE_ID,\r\n                \"user-name\": user.email,\r\n                \"user-secret\":user.uid,\r\n            }\r\n        })\r\n        .then(() => {\r\n            setLoading(false);\r\n        })\r\n        .catch(() => {      // waht is thers no chat profile so to create one we have used this.\r\n            let formdata = new FormData();\r\n            formdata.append('email', user.email);\r\n            formdata.append('username', user.email);\r\n            formdata.append('secret', user.uid);\r\n\r\n            getFile(user.photoURL)\r\n                .then((avatar) => {\r\n                    formdata.append('avatar', avatar, avatar.name)\r\n\r\n                    axios.post(\"https://api.chatengine.io/users/\",  //post method if the user doesnt exist.\r\n                        formdata,\r\n                        {headers: {'private-key': process.env.REACT_APP_CHAT_ENGINE_KEY}}\r\n                    )\r\n                    .then(() => setLoading(false))  // if user creation is successful then stop loading.\r\n                    .catch((error) => console.log(error))  //else show and err\r\n                })\r\n        })\r\n\r\n    },[user, history]);\r\n\r\n\r\n    if (!user || loading) return 'Loading...';\r\n    return (\r\n        <div className='chats-page'>\r\n            <div className='nav-bar'>\r\n                <div className='logo-tab'>\r\n                    Talk it out .. !\r\n                </div>\r\n                <div onClick={handleLogout} className='logout-tab'>\r\n                    logout\r\n                </div>\r\n            </div>\r\n            \r\n            <ChatEngine                         //using chat engine from chatengine.io            \r\n                height = 'calc(100vh-60px)'\r\n                projectID={process.env.REACT_APP_CHAT_ENGINE_ID}  // this should be a shifted to env vars\r\n                userName={user.email}\r\n                userSecret={user.uid}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chats;","import React from \"react\";\r\nimport { GoogleOutlined, FacebookOutlined } from \"@ant-design/icons\";\r\nimport firebase from \"firebase/app\";\r\nimport {auth} from './firebase';\r\n\r\nconst Login = () => {\r\n    return(\r\n        <div id=\"login-page\">\r\n            <div id = \"login-card\">\r\n                <h2>Welcome to Talk it out..!!</h2>\r\n                <div\r\n                    className=\"login-button google\"\r\n                    onClick={() => auth.signInWithRedirect(new firebase.auth.GoogleAuthProvider())}\r\n                >\r\n                    <GoogleOutlined/> Sign with Google\r\n                </div>\r\n                <br/><br/>\r\n                <div\r\n                    className=\"login-button facebook\"\r\n                    onClick={() => auth.signInWithRedirect(new firebase.auth.FacebookAuthProvider())}\r\n                >\r\n                    <FacebookOutlined/> Sign with Facebook\r\n                </div> \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","import React from \"react\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\" //for multipage applications\nimport { AuthProvider } from \"../contexts/AuthContext\"\n\nimport Chats from \"./Chats\"\nimport Login from \"./Login\"\n\nfunction App() {\n  return (\n    <div style={{ fontFamily: 'Avenir' }}>\n      <Router>\n        <AuthProvider> \n          <Switch>\n             <Route path=\"/chats\" component={Chats} /> \n            <Route path=\"/\" component={Login} /> \n          </Switch>\n        </AuthProvider> \n      </Router>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}